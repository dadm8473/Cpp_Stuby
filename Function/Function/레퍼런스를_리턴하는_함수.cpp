//#include <iostream>
//
//int fn1(int &a) { return a; }
//
//int main() {
//	int x = 1;
//	std::cout << fn1(x)++ << std::endl;
//	// 위 코드는 레퍼런스를 인자로 받아와서
//	// int를 반환하기 때문에 컴파일 오류가 남
//}

// =====================================================================================================================================================

//#include <iostream>
//
//int& fn1(int &a) { return a; }
//
//int main() {
//	int x = 1;
//	std::cout << fn1(x)++ << std::endl;
//	std::cout << "x :: " << x << std::endl;
//}

// a 는 x의 별명 이다.
// x 의 별명을 리턴하기 때문에
// fn1(x)++은 x++과 같은 문장의
// 역활을 한 것이다.

// =====================================================================================================================================================

// 밑은 포인터 레퍼런스 이해를 위한 공부한 흔적

//#include <iostream>
//
//int main()
//{
//	/*int x = 1;
//	int& ref = x;
//
//	x = 3;
//
//	std::cout << ref << " / " << &ref << std::endl;
//
//	ref = 5;
//
//	std::cout << ref << " / " << &ref << std::endl;*/
//
//	int x = 1;
//	int* ref = &x;
//
//	std::cout << ref << " / " << &ref << " / " << *ref << std::endl;
//
//	x = 3;
//
//	std::cout << ref << " / " << &ref << " / " << *ref << std::endl;
//}